from pygame import *
from pygame.time import get_ticks, wait
from pygame.mixer import Sound
from math import *
from random import *

from lib.point import *

seed()
mixer.pre_init(48000,-16,2,1024)
init()


# Game
GAME_TITLE = "Spherebounce"
PLAY_AREA_SIZE = 600

# Header
HEADER_HEIGHT = 36
HEADER_LABELS = (
	("Mute","Unmute"),
	("Pause","Continue"),
	("End", "End")
)
HEADER_FONT = font.Font("../fonts/DejaVuSansMono.ttf", 20)
HEADER_COLOR = (255,255,255)
HEADER_BGCOLOR = (0,0,0)
HEADER_LINE = 2
HEADER_PADDING = 2
HEADER_LABEL_POSITIONS = (
	Point(int(PLAY_AREA_SIZE*.2), int(HEADER_HEIGHT*.5 - HEADER_LINE - HEADER_HEIGHT)),
	Point(int(PLAY_AREA_SIZE*.5), int(HEADER_HEIGHT*.5 - HEADER_LINE - HEADER_HEIGHT)),
	Point(int(PLAY_AREA_SIZE*.8), int(HEADER_HEIGHT*.5 - HEADER_LINE - HEADER_HEIGHT))
)

# Wall
MIN_WALL_LENGTH = PLAY_AREA_SIZE*.015
WALL_LINE = 4
WALL_COLORS = (
	(210,210,231),
	(170,170,232),
	(130,130,234),
	(90,90,240),
	(50,50,245),
	(10,10,255),
	(230,30,255),
	(249,243,25)
)
WALL_DRAW_COLOR = (90,90,100)
WALL_INVALID_COLOR = (90,20,10)
WALL_TIMES = (0, 560, 1250, 3000, 7000, 12000, 20000, 40000)

# Sphere
SPHERE_START_X = PLAY_AREA_SIZE/2
SPHERE_START_Y = PLAY_AREA_SIZE - 20
SPHERE_START_ANGLE = 0
SPHERE_RADIUS = 4
SPHERE_COLOR = (255,255,255)
SPHERE_SAFE_TIME = 1800
SPHERE_BLINK_ONTIME = 160
SPHERE_BLINK_OFFTIME = 70

# Collectible
COLLECTIBLE_PADDING = int(PLAY_AREA_SIZE*.05)
MIN_COLLECTIBLE_RADIUS = 9
MAX_COLLECTIBLE_RADIUS = 14
COLLECTIBLE_LINE = 2
COLLECTIBLE_PREVIEW_LINE = 1
COLLECTIBLE_COLOR = (120,237,188)
COLLECTIBLE_PREVIEW_COLORS = (
	(50,86,69),
	(15,25,20)
)
COLLECTIBLE_BLINK_ONTIME = 430
COLLECTIBLE_BLINK_OFFTIME = 110
COLLECTIBLE_SCREEN_TIME = 40000
COLLECTIBLE_BLINK_TIME = 8000
COLLECTIBLE_MULTIPLICATOR = 15
COLLECTIBLE_EDGE_BONUS = 100
COLLECTIBLE_PREVIEW_AMOUNT = 2
COLLECTIBLE_EXPIRATION_PENALTY = 50

# Tanks
ENERGY_TANK_LENGTH = int(PLAY_AREA_SIZE*.66)
WALL_TANK_LENGTH = ENERGY_TANK_LENGTH

# Footer
FOOTER_HEIGHT = 44
FOOTER_FONT = font.Font("../fonts/DejaVuSansMono.ttf", 20)
FOOTER_COLOR = (255,255,255)
FOOTER_BGCOLOR = (0,0,0)
FOOTER_LINE = 2
FOOTER_BAR_LINE = WALL_LINE
FOOTER_TANK_LINE = 1
FOOTER_TANK_PADDING = 1
FOOTER_SCORE_DIGITS = 9
FOOTER_SCORE_POSITION = Point(
	int(PLAY_AREA_SIZE*.82),
	int(PLAY_AREA_SIZE + FOOTER_HEIGHT*.25 + FOOTER_LINE)
)
FOOTER_TIME_POSITION = Point(
	int(PLAY_AREA_SIZE*.82),
	int(PLAY_AREA_SIZE + FOOTER_HEIGHT*.75 - FOOTER_LINE)
)
FOOTER_ENERGY_TANK_POSITION = Point(
	20,
	int(PLAY_AREA_SIZE + HEADER_HEIGHT + FOOTER_HEIGHT*.25 + FOOTER_LINE)
)
FOOTER_WALL_TANK_POSITION = Point(
	20,
	int(PLAY_AREA_SIZE + HEADER_HEIGHT + FOOTER_HEIGHT*.75 + FOOTER_LINE)
)
FOOTER_BLINK_ONTIME = 490
FOOTER_BLINK_OFFTIME = 490

# Energy
MAX_ENERGY = ENERGY_TANK_LENGTH
ENERGY_COLOR = (208,40,24)
CLOSECALL_RESTORE = int(MAX_ENERGY*.05)
CLOSECALL_SIZE 	 = 18

# Obstacle
OBSTACLE_COLOR = ENERGY_COLOR
OBSTACLE_PREVIEW_COLOR = (52,10,6)
OBSTACLE_PADDING = int(PLAY_AREA_SIZE*.05)
MIN_OBSTACLE_RADIUS = 5
MAX_OBSTACLE_RADIUS = 10
OBSTACLE_LINE = 3
OBSTACLE_PREVIEW_LINE = 1
OBSTACLE_SCREEN_TIME = 15000
OBSTACLE_PREVIEW_TIME = 5000
OBSTACLE_DAMAGE = int(MAX_ENERGY*.35)

# Overlay
PAUSED_OVERLAY_LABEL = "Paused"
PAUSED_OVERLAY_COLOR = (255,255,255)
PAUSED_OVERLAY_FONT = font.Font("../fonts/DejaVuSansMono.ttf", 24)
PAUSED_OVERLAY_POSITION = Point(PLAY_AREA_SIZE/2, PLAY_AREA_SIZE/2)
GAMEOVER_OVERLAY_LABEL = "Game Over"
GAMEOVER_OVERLAY_COLOR = PAUSED_OVERLAY_COLOR
GAMEOVER_OVERLAY_FONT = PAUSED_OVERLAY_FONT
GAMEOVER_OVERLAY_POSITION = PAUSED_OVERLAY_POSITION
STAGE_OVERLAY_LABEL = "Stage "
STAGE_OVERLAY_COLOR = PAUSED_OVERLAY_COLOR
STAGE_OVERLAY_FONT = PAUSED_OVERLAY_FONT
STAGE_OVERLAY_POSITION = PAUSED_OVERLAY_POSITION
STAGE_OVERLAY_TIME = 2800
CLOSECALL_OVERLAY_LABEL = "Energy Restored"
CLOSECALL_OVERLAY_COLOR = OBSTACLE_COLOR
CLOSECALL_OVERLAY_FONT = font.Font("../fonts/DejaVuSansMono.ttf", 13)
CLOSECALL_OVERLAY_TIME = 1000
ADD_SCORE_OVERLAY_COLOR = (100,220,170)
ADD_SCORE_OVERLAY_FONT = font.Font("../fonts/DejaVuSansMono.ttf", 18)
ADD_SCORE_OVERLAY_TIME = 1500
SUBTRACT_SCORE_OVERLAY_COLOR = (200, 20,110)
SUBTRACT_SCORE_OVERLAY_FONT = ADD_SCORE_OVERLAY_FONT
SUBTRACT_SCORE_OVERLAY_TIME = 1100

# Screen
SCREEN_WIDTH = PLAY_AREA_SIZE
SCREEN_HEIGHT = PLAY_AREA_SIZE + HEADER_HEIGHT + FOOTER_HEIGHT

# Mouse
CLICK_RADIUS = 7
MOUSE_HOLDTIME = 130
MOUSE_HOLDSIZE = MIN_WALL_LENGTH

# Sound
PATH_BGM = "../music/bgm.wav"
VOLUME_BGM = .48
VOLUME_BGM_PAUSED = .21
BASEPATH_SFX = "../sfx/"
PATH_BOUNCE_SFX = BASEPATH_SFX + "bounce.wav"
VOLUME_BOUNCE_SFX = .32
PATH_DAMAGE_SFX = BASEPATH_SFX + "damage.wav"
VOLUME_DAMAGE_SFX = .54
PATH_RESTORE_SFX = BASEPATH_SFX + "restore.wav"
VOLUME_RESTORE_SFX = .20
PATH_SELECT_SFX = BASEPATH_SFX + "select.wav"
VOLUME_SELECT_SFX = .12
PATH_COLLECT_SFX = BASEPATH_SFX + "collect.wav"
VOLUME_COLLECT_SFX = .18
PATH_EXPIRE_SFX = BASEPATH_SFX + "expire.wav"
VOLUME_EXPIRE_SFX = .20

# Scoring
BASE_SCORE = 100
LEVEL_MULTIPLICATORS = (0, 0.25, 0.33, 0.5, 0.66, 0.75, 0.9, 1.50)
RANGE_BONUS = 200
SERIES_MULTIPLICATOR = 1
STREAK_MULTIPLICATOR = 0.1
LEVEL_SCORES = (0, 10, 25, 100, 500, 1500, 5000, 20000)
PRECISE_MULTIPLICATOR = 2
PRECISE_SIZE = PLAY_AREA_SIZE*.078
START_VELOCITIES = (0.13, 0.15, 0.18, 0.20, 0.22, 0.25)
ACCELERATIONS = tuple(0.0000001*x for x in (3.89, 5.56, 4.58, 4.33, 4.33, 2.78))
BASE_VELOCITY = START_VELOCITIES[0]
VELOCITY_EXPONENT = 2.6

# Play area
PLAY_AREA_BGCOLOR = (0,0,0)
EDGE_COLOR = OBSTACLE_COLOR
EDGE_LINE = 1
EDGE_DAMAGE = int(MAX_ENERGY*.4)
EDGE_SIZE = PLAY_AREA_SIZE*.14

# Stages
STAGE_DURATIONS = (90000, 120000, 150000, 1800000, 999999999)
STAGE_COLLECTIBLE_AMOUNTS = (0, 8, 10, 10, 12, 10, 12)
STAGE_OBSTACLE_AMOUNTS = (0, 3, 4, 4, 5, 5, 2)

